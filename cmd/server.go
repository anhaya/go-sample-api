package cmd

import (
	"log"

	_ "github.com/anhaya/go-sample-api/docs" // docs is generated by Swag CLI, you have to import it.
	handler "github.com/anhaya/go-sample-api/internal/app/handler"
	"github.com/anhaya/go-sample-api/internal/config"
	infraDb "github.com/anhaya/go-sample-api/internal/infrastructure/db"
	"github.com/anhaya/go-sample-api/internal/infrastructure/router"
	"github.com/anhaya/go-sample-api/internal/infrastructure/server"
	accountUseCase "github.com/anhaya/go-sample-api/internal/usecase/account"
	transactionUseCase "github.com/anhaya/go-sample-api/internal/usecase/transaction"
)

func Execute() {

	//Initiate env vars
	config, err := config.LoadConfig()
	if err != nil {
		log.Panicf("cannot load config: %s", err)
	}

	//Initiate database connection
	db, err := infraDb.Open(
		config.DB.User,
		config.DB.Password,
		config.DB.Host,
		config.DB.Port,
		config.DB.Database)
	if err != nil {
		log.Panicf("error oppening connection %s", err)
	}
	defer db.Close()

	//Initiate dependency injection
	accountRepository := infraDb.NewAccount(db.DB)
	accountUseCase := accountUseCase.NewAccount(accountRepository)
	accountHandler := handler.NewAccount(accountUseCase)

	transactionRepository := infraDb.NewTransaction(db.DB)
	transactionUseCase := transactionUseCase.NewTransaction(db, transactionRepository, accountUseCase)
	transactionHandler := handler.NewTransaction(transactionUseCase)

	//Initiate router
	router := router.NewRouter(accountHandler, transactionHandler)

	//Iniatiate server API
	server.InitServer(router)
}
